#BlueJ class context
comment0.target=LanguageInterface
comment0.text=\n\ Required\ methods\ and\ enums\ for\ the\ Language\ class\n\ @author\ \ \ \ \ \ Bill\ Barry\n\ @version\ \ \ \ \ 2023-06-24\n
comment1.params=
comment1.target=java.lang.String\ getName()
comment1.text=\n\ Retrieves\ the\ name\ of\ the\ language\n\ @return\ \ \ \ \ \ language\ name\n
comment2.params=
comment2.target=java.lang.String\ getFilename()
comment2.text=\n\ Retrieves\ the\ filename\ for\ keywords\n\ @return\ \ \ \ \ \ filename\ in\ which\ keywords\ do\ (or\ would)\ reside\n
comment3.params=
comment3.target=LanguageInterface.Type\ getType()
comment3.text=\n\ Retrieves\ the\ typical\ implementation\ type\ for\ the\ language\n\ @return\ \ \ \ \ \ typical\ implementation\ type\n
comment4.params=
comment4.target=int\ getKwdCount()
comment4.text=\n\ Retrieves\ a\ count\ of\ keywords\ for\ the\ language\n\ @return\ \ \ \ \ \ count\ of\ keywords\n
comment5.params=index
comment5.target=java.lang.String\ getKwd(int)
comment5.text=\n\ Retrieves\ the\ keyword\ at\ the\ specified\ index\n\ @param\ index\ \ \ \ \ index\ of\ the\ keyword;\ must\ be\ a\ valid\ index\ in\ the\ range\ 0\ to\ count\ -\ 1\n\ @return\ \ \ \ \ \ \ \ \ \ keyword\ at\ the\ specified\ index\ in\ the\ list\n
comment6.params=keyword
comment6.target=int\ findKwd(java.lang.String)
comment6.text=\n\ Retrieves\ the\ index\ associated\ with\ the\ specified\ keyword\n\ @param\ keyword\ \ \ \ \ \ \ keyword\ to\ search\ for\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ index\ of\ keyword,\ or\ -1\ if\ no\ match\ is\ found\n
comment7.params=
comment7.target=int\ findShortestKwdLength()
comment7.text=\n\ determines\ the\ length\ of\ the\ shortest\ keyword\ in\ the\ keyword\ list\n\ @return\ \ length\ of\ the\ shortest\ keyword,\ or\ -1\ if\ there\ are\ no\ keywords\ in\ the\ list\n
comment8.params=
comment8.target=int\ findLongestKwdLength()
comment8.text=\n\ determines\ the\ length\ of\ the\ longest\ keyword\ in\ the\ keyword\ list\n\ @return\ \ length\ of\ the\ longest\ keyword,\ or\ -1\ if\ there\ are\ no\ keywords\ in\ the\ list\n
comment9.params=
comment9.target=void\ sortKwds()
comment9.text=\n\ Sorts\ keywords\ alphabetically\ (case-sensitive).\ \ Implements\ an\ Insertion\ Sort\ adapted\ from\ the\n\ \ \ \ \ \ code\ given\ in\ class\ (see\ slides\ on\ Sorting).\n
numComments=10
